package training.Patterns.ObserverPattern;
         /*
         Требуется определить связь «один ко многим» между объектами таким образом, чтобы при изменении состояния одного объекта все связанные с ним объекты опове­щались об этом и автоматически изменяли свое состояние. В языке Java этот шаблон используется под названием Listener.
         Класс Rectangle (субъект) располагает информацией о своих наблюдателях и предоставляет интерфейс для регистрации и уведомления наблюдателей. Класс OperationObserver (наблюдатель) определяет интерфейс обновления для объектов, которые должны быть уведомлены об изменении субъекта. Класс Perimeter (конкретный наблюдатель) хранит или получает ссылку на объект класса Rectangle, сохраняет данные и реализует интерфейс обновления, определенный в классе OperationObserver для поддержки согласованности с субъектом.

Шаблон обеспечивает автоматическое уведомление всех подписавшихся на него объектов. Кроме этого, применение шаблона Observer абстрагирует связь субъекта и наблюдателя. Субъект имеет инфор­мацию только о том, что у него есть некоторое число наблюдателей, каждый из которых подчиняется интерфейсу абстрактного класса-наблюдателя.


          */
public class Main {
	public static void main(String[] args) {
		Rectangle observed = new Rectangle(5, 3);
		System.out.println(observed.toString());
		observed.addObserver(new Square());
		observed.addObserver(new Perimeter());
		observed.setWidth(10);
		System.out.println(observed.toString());
		observed.setHeight(8);
		System.out.println(observed.toString());
	}
}